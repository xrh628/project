<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.OrderMapper">
	<resultMap type="order" id="orderResultMapper">
		<id property="orderId" column="orderId" />
		<result property="sumPrice" column="sumPrice" />
		<result property="state" column="state" />
		<result property="orderDate" column="orderDate" />
		<association property="user" column="userId"
			javaType="User" select="findUser"></association>
		<collection property="details" column="orderId"
			javaType="ArrayList" select="findDetails"></collection>
	</resultMap>

	<resultMap type="user" id="userResultMapper">
		<id property="userId" column="userId" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="email" column="email" />
		<result property="address" column="address" />
	</resultMap>


	<resultMap type="detail" id="detailResultMapper">
		<id property="detailId" column="detailId" />
		<result property="orderId" column="orderId" />
		<result property="bookSum" column="bookSum" />
		<association property="book" column="bookId"
			javaType="Book" select="findBook"></association>
	</resultMap>

	<resultMap type="book" id="bookResultMapper">
		<id property="bookId" column="bookId" />
		<result property="bookName" column="bookName" />
		<result property="bookPrice" column="bookPrice" />
		<result property="bookSum" column="bookSum" />
		<result property="bookPic" column="bookPic" />
	</resultMap>

<select id="findUser" parameterType="int"  resultMap="userResultMapper">
select * from user where userId=#{id}
</select>
<select id="findDetails" parameterType="int"  resultMap="detailResultMapper">
select * from detail where orderId=#{id}
</select>
<select id="findBook" parameterType="int"  resultMap="bookResultMapper">
select * from book where bookId=#{id}
</select>
	<select id="findAllOrder" parameterType="int"
		resultMap="orderResultMapper">
		select * from `order` where userId=#{id}
	</select>

	<insert id="addOrder" parameterType="order"
		useGeneratedKeys="true" keyProperty="orderId">
		INSERT INTO `order`(userId,sumPrice,state,orderDate)
		VALUES(#{user.userId},#{sumPrice},0,NOW())
	</insert>
	
	<select id="findByPage" parameterType="map"
		resultMap="orderResultMapper">
		select * from `order` where 1=1
		<if test="flag != 'find' ">
			<if test="flag=='find1'">
				and DATE_SUB(CURDATE(),INTERVAL 30 DAY) &gt;= orderDate
			</if>
			<if test="flag=='find2'">
				and DATE_SUB(CURDATE(),INTERVAL 30 DAY) &lt;= orderDate
			</if>
			<if test="flag=='find3'">
			and   find_in_set(orderId,#{orderIds})
			</if>
		</if>
		and userId=#{userId}
		order by orderId desc limit #{from},3
	</select>

	<select id="findCount" parameterType="map" resultType="int">
		select count(orderId) from `order` where 1=1
		<if test="flag != 'find'">
			<if test="flag=='find1'">
				and DATE_SUB(CURDATE(),INTERVAL 30 DAY) &gt;=orderDate
			</if>
			<if test="flag=='find2'">
				and DATE_SUB(CURDATE(),INTERVAL 30 DAY) &lt;=orderDate
			</if>
			<if test="flag=='find3'">
				and  find_in_set(orderId ,#{orderIds})
			</if>
		</if>
		and userId=#{userId}
		
	</select>





	<update id="updateState" parameterType="int">
		update `order` set state=1 where orderId=#{id}
	</update>

	<select id="selectOrderId" resultType="int">
		SELECT orderId FROM `order` WHERE orderId NOT IN (SELECT orderId FROM
		detail)
	</select>


</mapper>